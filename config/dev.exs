import Config

# Configure your database
repo_opts =
  if socket_dir = System.get_env("PGDATA") do
    [socket_dir: socket_dir]
  else
    [username: "postgres", password: "postgres"]
  end

config :epi_locator,
       EpiLocator.Repo,
       [database: "epi_locator_dev", pool_size: 20, show_sensitive_data_on_connection_error: true] ++ repo_opts

# For development, we disable any cache and enable
# debugging and code reloading.
#
# The watchers configuration can be used to run external
# watchers to your application. For example, we use it
# with webpack to recompile .js and .css sources.
config :epi_locator, EpiLocatorWeb.Endpoint,
  debug_errors: true,
  code_reloader: true,
  check_origin: false,
  watchers: [
    esbuild: {Esbuild, :install_and_run, [:default, ~w(--sourcemap=inline --watch)]},
    sass: {
      DartSass,
      :install_and_run,
      [:default, ~w(--embed-source-map --source-map-urls=absolute --watch)]
    }
  ],
  content_security_policy: "default-src * 'unsafe-inline'",
  strict_transport_security: ""

# ## SSL Support
#
# In order to use HTTPS in development, a self-signed
# certificate can be generated by running the following
# Mix task:
#
#     mix phx.gen.cert
#
# Note that this task requires Erlang/OTP 20 or later.
# Run `mix help phx.gen.cert` for more information.
#
# The `http:` config above can be replaced with:
#
#     https: [
#       port: 4001,
#       cipher_suite: :strong,
#       keyfile: "priv/cert/selfsigned_key.pem",
#       certfile: "priv/cert/selfsigned.pem"
#     ],
#
# If desired, both `http:` and `https:` keys can be
# configured to run both http and https servers on
# different ports.

# Watch static and templates for browser reloading.
config :epi_locator, EpiLocatorWeb.Endpoint,
  live_reload: [
    patterns: [
      ~r"priv/static/.*(js|css|png|jpeg|jpg|gif|svg)$",
      ~r"priv/gettext/.*(po)$",
      ~r"lib/epi_locator_web/(live|views)/.*(ex)$",
      ~r"lib/epi_locator_web/templates/.*(eex)$"
    ]
  ]

# Do not include metadata nor timestamps in development logs
config :logger, :console, format: "[$level] $message\n"

# Set a higher stacktrace during development. Avoid configuring such
# in production as building large stacktraces may be expensive.
config :phoenix, :stacktrace_depth, 20

# Initialize plugs at runtime for faster development compilation
config :phoenix, :plug_init_mode, :runtime

config :epi_locator,
  environment_name: "dev",
  secure_session_cookies: false,
  commcare_signature_test_case_id: System.get_env("COMMCARE_SIGNATURE_TEST_CASE_ID"),
  commcare_signature_test_domain: System.get_env("COMMCARE_SIGNATURE_TEST_DOMAIN"),
  commcare_signature_test_user_id: System.get_env("COMMCARE_SIGNATURE_TEST_USER_ID")
